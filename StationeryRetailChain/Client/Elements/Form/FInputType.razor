@using Type = StationeryRetailChain.Shared.Models.Type

@if(types==null || subcategories==null || categories==null)
{
    <div class="spinner-grow text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <div class="mb-3">
        <label class="form-label" style="position:relative; top:-0.1em">Категорія:</label>
        <RadzenAutoComplete Data=@categories TextProperty="CategoryName" @bind-Value="CategoryName" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" />
        @if(CategoryName != null && CategoryName != "" && !categories.Any(e=>e.CategoryName==CategoryName))
        {
            <div class="alert alert-primary d-flex align-items-center" role="alert">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
              </svg>
              <div>
                Цієї категорії немає, бажаєте додати? <button class="btn btn-primary btn-sm" @onclick="AddCategory">Додати</button>
              </div>
            </div>
        }
    </div>
    <div class="mb-3">
        <label class="form-label" style="position:relative; top:-0.1em">Підкатегорія:</label>
        <RadzenAutoComplete Data=@subcategories.Where(s=>s.CategoryId==categories.First(e=>e.CategoryName==CategoryName).CategoryId) TextProperty="SubcategoryName" @bind-Value="SubcategoryName" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Disabled=@(!categories.Any(e=>e.CategoryName==CategoryName)) />
        @if(SubcategoryName != null && SubcategoryName != "" && !subcategories.Any(e=>e.SubcategoryName==SubcategoryName && e.CategoryId==categories.First(e=>e.CategoryName==CategoryName).CategoryId))
        {
            <div class="alert alert-primary d-flex align-items-center" role="alert">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
              </svg>
              <div>
                Цієї підкатегорії немає, бажаєте додати? <button type="button" class="btn btn-primary btn-sm" @onclick="AddSubcategory">Додати</button>
              </div>
            </div>
        }
    </div>
    <div class="mb-3">
        <label class="form-label" style="position:relative; top:-0.1em">Тип:</label>
        <RadzenAutoComplete Data=@types.Where(c=>c.SubcategoryId==subcategories.First(e=>e.SubcategoryName==SubcategoryName && e.CategoryId==categories.First(e=>e.CategoryName==CategoryName).CategoryId).SubcategoryId) TextProperty="CityName" @bind-Value="TypeName" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Disabled=@(!subcategories.Any(e=>e.SubcategoryName==SubcategoryName && e.CategoryId==categories.First(e=>e.CategoryName==CategoryName).CategoryId)) />
        @if(TypeName != null && TypeName != "" && !types.Any(e=>e.TypeName==TypeName && e.SubcategoryId==subcategories.First(e=>e.SubcategoryName==SubcategoryName && e.CategoryId==categories.First(e=>e.CategoryName==CategoryName).CategoryId).SubcategoryId))
        {
            <div class="alert alert-primary d-flex align-items-center" role="alert">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
              </svg>
              <div>
                Цього типу немає, бажаєте додати? <button class="btn btn-primary btn-sm" @onclick="AddType">Додати</button>
              </div>
            </div>
        }
    </div>
}




@code {
    [Parameter]
    public int Value
    {
        get => _value;
        set
        {
            if (_value == value) return;
            _value = value;
            if(types?.Any(c=>c.TypeId==value)??false)
            {
                Type type = types.First(c => c.TypeId == value);
                CategoryName=type.Subcategory.Category.CategoryName;
                SubcategoryName = type.Subcategory.SubcategoryName;
                TypeName = type.TypeName;
            }
            else
            {
                CategoryName="";
                SubcategoryName = "";
                TypeName = "";
            }

            ValueChanged.InvokeAsync(value);
        }
    }
    private int _value;
    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }
    [Parameter]
    public Expression<Func<int>> ValueExpression { get; set; }

    private Type[]? types;
    private Subcategory[]? subcategories;
    private Category[]? categories;

    private string CategoryName { get; set; }
    private string SubcategoryName { get; set; }
    private string TypeName {
        get => _typeName; 
        set
        {
            _typeName = value;
            if(value != null && value != "" && types!=null&&subcategories!=null&&categories!=null&& types.Any(e=>e.TypeName==value && e.SubcategoryId==subcategories.First(e=>e.SubcategoryName==SubcategoryName && e.CategoryId==categories.First(e=>e.CategoryName==CategoryName).CategoryId).SubcategoryId))
            {
                Value = types.First(e => e.TypeName == value && e.SubcategoryId == subcategories.First(e => e.SubcategoryName == SubcategoryName && e.CategoryId == categories.First(e => e.CategoryName == CategoryName).CategoryId).SubcategoryId).TypeId??-1;
            }
        }
    }
    private string _typeName;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            types = await Http.GetFromJsonAsync<Type[]>("api/types");
            subcategories = await Http.GetFromJsonAsync<Subcategory[]>("api/subcategories");
            categories = await Http.GetFromJsonAsync<Category[]>("api/categories");
            if(types?.Any(c=>c.TypeId==Value)??false)
            {
                Type type = types.First(c => c.TypeId == Value);
                CategoryName = type.Subcategory.Category.CategoryName;
                SubcategoryName = type.Subcategory.SubcategoryName;
                TypeName = type.TypeName;
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    private async void AddCategory()
    {
        var result = await Http.PostAsJsonAsync("api/categories", new Category() { CategoryName=CategoryName, CategoryDescription="" });
        if(result.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("Alert", new object[] { "Категорію додано" });
            await OnInitializedAsync();
            this.StateHasChanged();
        }
        else
            await JSRuntime.InvokeAsync<object>("Alert", new object[] { result.ReasonPhrase });
    }
    private async void AddSubcategory()
    {
        var result = await Http.PostAsJsonAsync("api/subcategories", new Subcategory() { SubcategoryName=SubcategoryName, CategoryId=categories.First(e=>e.CategoryName==CategoryName).CategoryId??0 });
        if(result.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("Alert", new object[] { "Підкатегорію додано" });
            await OnInitializedAsync();
            this.StateHasChanged();
        }
        else
            await JSRuntime.InvokeAsync<object>("Alert", new object[] { result.ReasonPhrase });
    }
    private async void AddType()
    {
        var result = await Http.PostAsJsonAsync("api/types", new Type() { TypeName=TypeName, SubcategoryId=subcategories.First(e=>e.SubcategoryName==SubcategoryName && e.CategoryId==categories.First(e=>e.CategoryName==CategoryName).CategoryId).SubcategoryId??0 });
        if(result.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("Alert", new object[] { "Тип додано" });
            await OnInitializedAsync();
            this.StateHasChanged();
        }
        else
            await JSRuntime.InvokeAsync<object>("Alert", new object[] { result.ReasonPhrase });
    }
}
